一、初始测试结果
以下测试均为，1、3、8为坏节点测试结果
测试1：
last worker_credit [62.38062104757526, 58.276433734635, 55.743415979174415, 14.076188733844637, 17.915547110144157, 58.02584237673571, 58.50787129017742, 59.712962523589994, 16.775103147886462, 60.16781367057752]
sorted credit num [0 9 7 6 1 5 2 4 8 3]
测试2：
last worker_credit [63.59852010753879, 60.173019206833345, 60.69297927542952, 59.474751882518596, 61.20143670337904, 14.559954855735514, 15.838536469583566, 60.45193293384056, 12.35391366969287, 61.819481173846704]
sorted credit num [0 9 4 2 7 1 3 6 5 8]
测试3：
last worker_credit [64.98596832808205, 60.42162346038278, 61.44655175493413, 60.41195224081297, 61.87808760908043, 60.715420492679854, 16.133283635677508, 61.06578104179445, 21.647633692851443, 18.3882156287312]
sorted credit num [0 4 2 7 5 1 3 8 9 6]
测试4：
last worker_credit [61.499736551752456, 14.944648343496858, 58.67959819944022, 59.517768687879204, 57.016477767965206, 57.827000158574364, 17.771565250006965, 58.1900683525723, 15.71205971925069, 56.09011526441398]
sorted credit num [0 3 2 7 5 4 9 6 8 1]
测试5：
last worker_credit [78.67507854009362, 74.4984814680727, 76.89634851998545, 75.5791628502739, 21.819577191365784, 19.36930775296525, 18.515038749170998, 76.8275793505252, 74.20053693225354, 76.63727748350902]
sorted credit num [0 2 7 9 3 1 8 4 5 6]

二、实现细节
1.由于在测试中发现，如果仍每个worker自由跑，会出现在一次训练中只有一个worker在跑的情况，因此添加了每个worker跑一轮会睡眠0.5s，
使得各个woker负载相对均衡，但是仍然有多有少
2.选择组合臂的方式使用e-greedy的方式，以e的概率随机选择臂，而e从1线性减小到0.1，在10000步以内完成
3.游戏的停止条件并不是指定最终轮数，而是修改成了奖励多次达到了150才会停止
4.不知道为何，当前这种实现方式和之前的方式相比，收敛速度减慢了许多
5.每次运行，会在保存目录下自动生成一个runN的文件夹，保存运行的参数、结果和log，以此进行分析训练结果
6.现在的设计是一个大轮回，大轮回里选的臂都是一样的，在大轮回里，每个臂都要跑个多episode,大轮回选的臂是一样的，
然后大家一起跑100轮，异步，可能会有多有少，然后跑完后，使用0号正确的节点跑5轮或者reward，使用平均reward当作R更新当前轮选的臂的credit，再开始下一大轮回选臂跑